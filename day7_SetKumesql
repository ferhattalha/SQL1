CREATE TABLE personel
    (
        id NUMBER(9),
        isim VARCHAR2(50),
        sehir VARCHAR2(50),
        maas NUMBER(20),
        sirket VARCHAR2(20)
    );
    INSERT INTO personel VALUES(123456789, 'Ali Yilmaz', 'Istanbul', 5500, 'Honda');
    INSERT INTO personel VALUES(234567890, 'Veli Sahin', 'Istanbul', 4500, 'Toyota');
    INSERT INTO personel VALUES(345678901, 'Mehmet Ozturk', 'Ankara', 3500, 'Honda');
    INSERT INTO personel VALUES(456789012, 'Mehmet Ozturk', 'Izmir', 6000, 'Ford');
    INSERT INTO personel VALUES(567890123, 'Mehmet Ozturk', 'Ankara', 7000, 'Tofas');
    INSERT INTO personel VALUES(453445611, 'Veli Sahin', 'Ankara', 4500, 'Ford');
    INSERT INTO personel VALUES(123456710, 'Hatice Sahin','Bursa', 4200, 'Honda');
    
  --  ORNEK1: Maasi 4000’den cok olan isci isimlerini ve 5000 liradan fazla maas
 -- alinan sehirleri gosteren sorguyu yaziniz
   
   
  -- ORNEK2: Mehmet Ozturk ismindeki kisilerin aldigi maaslari ve Istanbul’daki
 -- personelin maaslarini yüksekten alçaða doðru sýralayarak bir tabloda gosteren
  --sorguyu yaziniz.
   SELECT  maas, isim AS  isim_yada_sehir           FROM personel   
   WHERE isim='Mehmet Ozturk'     
   UNION  
   SELECT maas,sehir FROM personel WHERE sehir='Istanbul'
   ORDER BY maas DESC;
   
   drop table  personel;
   FLASHBACK TABLE personel TO BEFORE DROP;
   
  /* ======================= FARKLI TABLOLARDAN BIRLESTIRME ====================*/
 --   hata verirse personel i sil bir daha create et
   
    CREATE TABLE personel_bilgi
    (
        id NUMBER(9),
        tel char(10) UNIQUE ,
        cocuk_sayisi NUMBER(2)
   
    );
    INSERT INTO personel_bilgi VALUES(123456789, '5302345678', 5);
    INSERT INTO personel_bilgi VALUES(234567890, '5422345678', 4);
    INSERT INTO personel_bilgi VALUES(345678901, '5354561245', 3);
    INSERT INTO personel_bilgi VALUES(456789012, '5411452659', 3);
    INSERT INTO personel_bilgi VALUES(567890123, '5551253698', 2);
    INSERT INTO personel_bilgi VALUES(453445611, '5524578574', 2);
    INSERT INTO personel_bilgi VALUES(123456710, '5537488585', 1);
    
   -- Soru ==> -- Ornek 3: id' si 123456789 olan personelin personel tablosu' ndan sehir ve maasini, 
   --personel_bilgi tablosundan da tel ve cocuk sayisini yazdiriniz .
    
    select id,sehir,maas from personel
    where id=123456789
    UNION
    select id, tel,cocuk_sayisi from personel_bilgi
    where id=123456789;
    
    /*========================= SET OPERATORLERI: INTERSECT ========================
    --ýntersect=> iki kümenin kesiþimini döndürür
    INTERSECT operarotu 2 veya daha fazla Sorgu ifadesinin sonuclarini
    dondurmek icin kullanilir. Ancak, intersect SADECE tum sorgularin ortak
    verilerini (kesimlerini) dondurur.
    Syntax:
    ----------
    SELECT sutun_adi,sutun_adi2, .. FROM tablo_adi1
    INTERSECT
    SELECT sutun_adi1, sutun_adi2, .. FROM tablo_adi2;
==============================================================================*/
/* -----------------------------------------------------------------------------*/
  ORNEK5: Personel tablosundan Istanbul veya Ankara’da calisanlarin id’lerini
  sorgulayiniz.
  Personel_bilgi tablosundan 2 veya 3 cocugu olanlarin id lerini sorgulayiniz.
  Bu iki sorguyu INTERSECT ile birlesitiriniz.
/*------------------------------------------------------------------------------*/
    
    select id from personel
    where sehir IN('Ankara' , 'Istanbul')
    INTERSECT
    select id from personel_bilgi
    where cocuk_sayisi IN (2,3);
    
--ORNEK6: Honda,Ford ve Tofas’ta calisan ortak isimde personel varsa listeleyin


select isim from personel
Where sirket='Honda'
INTERSECT
select isim from personel
Where sirket='Ford'
INTERSECT
select isim from personel
Where sirket='Tofas';
    

--ORNEK7: Toyota ve Ford sirketlerinde ayni maasi alan personel isimlerini
 -- listeleyin

Select isim,maas from personel
Where sirket='Toyota'
INTERSECT
Select isim,maas from personel
Where sirket='Ford';


/*========================= SET OPERATORLERI: MINUS ============================
    MINUS operatoru ilk Sorgu ifadesinde olup da diger sorgu ifadesinde olmayan
    verileri dondurur. Yani 1. sorgu ile 2. sorgu arasindaki farklý olanlarý
    dondurur
    Syntax:
    ----------
    SELECT sutun_adi,sutun_adi2, .. FROM tablo_adi1
    MINUS
    SELECT sutun_adi1, sutun_adi2, .. FROM tablo_adi2;
==============================================================================*/
/* ----------------------------------------------------------------------------*/
  ORNEK8: 5000’den az maas alan ve Honda calisani olmayanlarýn bilgilerini
  listeleyen bir sorgu yaziniz.
------------------------------------

Select isim,maas,sirket from personel
Where maas<5000
MINUS  -- Mýnus ile çözümü
Select isim,maas,sirket from personel
Where sirket='Honda';


Select isim,maas,sirket from personel
Where maas<5000
INTERSECT --ýntersect ile çözümü
Select isim,maas,sirket from personel
Where sirket !='Honda';  --Where'den sonra NOT kullanýlýp ! kullanýlmayabilir

--ORNEK8: Ismi Mehmet Ozturk olup Izmir’de calismayanlarin isimlerini ve
 -- sehirlerini listeleyen sorguyu yaziniz.

Select isim,sehir from personel
where isim='Mehmet Ozturk'
MINUS    --MINUS ta UNION gibi tekrarlý satýrlardan sadece birini yazdýrýr
Select isim,sehir from personel
where sehir='Izmir';


Select isim,sehir from personel
where isim='Mehmet Ozturk'
INTERSECT
Select isim,sehir from personel
where sehir !='Izmir';


